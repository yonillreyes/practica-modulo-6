Practica 1 - Cifrado 1pts

Descargue la herramiente gpg2, instalarla y configurarla 
Cree un directorio, y dentro un archivo y cifrelo utilizando gpg2
Intente acceder al archivo cifrado
Luego decifre el archivo y muestre el contenido del mismo
Practica 2 - IP tables - UFW/Firewall-cmd 1pts

Habilite los servicios de http, ftp y ssh en el servidor, muentre ambos servicios funcionando de manera correcta
Utilizando IP tables bloquee el trafico del puerto 80, 21 y 22 para bloquear las conexiones hacia ambos servicios muestre los resultados
Utilizando IP tables habilite nuevamente el trafico del puerto 80, 21 y 22 para permitir las conexiones hacia ambos servicios
Utilizando ufw (si su distro es basada en debian) o firewall-cmd (si su distro esta basada en Red Hat) bloquee el trafico del puerto 80,21 y 22 para bloquear las conexiones hacia ambos servicios
Habilite nuevamente el trafico del puerto 80, 21 y 22 para permitir las conexiones hacia ambos servicios.
Practica 3 -Instalacion de IDS snort 1pts
Descargue e instale el  IDS snort (Apoyese de la documentacion oficial)
luego de instalado, cree las siguientes reglas de deteccion de trafico:
Detectar todo el trafico ICMP (Ping) hacia el host
Detectar todo el trafico hacia el puerto 21/tcp de ese host
Detectar todo el trafico hacia el puerto 22/tcp de ese host
Detectar todo el trafico hacia el puerto 80/tcp de ese host
Ejecute el IDS, Realize las pruebas desde su maquina host, y muestre como son detectadas por el IDS 
Practica 4: Configurar 2FA con google authenticator Modulo PAM para Acceso SSH

Instale y Configure Google Authenticator para el usuario que se utilizara para acceder via SSH
Configure PAM para usar Google Authenticator
Configure SSH para solicitar 2FA 
Realize la demostraccion accediendo desde asu Maquina host hasta tu VM (si es exitoso, se te pedir√°: Contrase√±a C√≥digo de Google Authenticator, ingrese los datos y el codigo enviado y acceda)







practica 1



aso 1: Instalaci√≥n y configuraci√≥n de GPG2
¬øQu√© es GPG?

GPG (GNU Privacy Guard) es una herramienta de cifrado que implementa el est√°ndar OpenPGP. Permite cifrar y firmar datos y comunicaciones, garantizando la confidencialidad e integridad de la informaci√≥n.‚Äã


Instalaci√≥n en Oracle Linux:

Oracle Linux, al estar basado en Red Hat Enterprise Linux (RHEL), utiliza el gestor de paquetes dnf o yum. Para instalar GPG2, puedes ejecutar:‚Äã
yum.oracle.com

sudo dnf install gnupg2


üìÅ Paso 2: Crear un directorio y un archivo para cifrar
Creaci√≥n del directorio:


mkdir ~/cifrado_practica
cd ~/cifrado_practica


Creaci√≥n del archivo:

echo "Este es un archivo secreto." > secreto.txt

Ahora tienes un archivo llamado secreto.txt con contenido que deseas proteger.‚Äã



üîê Paso 3: Cifrar el archivo utilizando GPG2

Cifrado sim√©trico:

El cifrado sim√©trico utiliza una sola contrase√±a para cifrar y descifrar. Para cifrar el archivo:‚Äã
Medium


gpg2 -c secreto.txt


Se te pedir√° que ingreses una contrase√±a. Despu√©s de confirmar, se generar√° un archivo llamado secreto.txt.gpg.‚Äã

¬øQu√© ocurre aqu√≠?

GPG utiliza la contrase√±a proporcionada para cifrar el contenido de secreto.txt, creando un archivo cifrado que solo puede ser descifrado con la misma contrase√±a.‚Äã




üö´ Paso 4: Intentar acceder al archivo cifrado
Si intentas abrir secreto.txt.gpg con un editor de texto o visualizar su contenido directamente:‚Äã


cat secreto.txt.gpg



Ver√°s una serie de caracteres ilegibles. Esto se debe a que el contenido est√° cifrado y no puede ser interpretado sin la contrase√±a correcta.‚Äã

üîì Paso 5: Descifrar el archivo y mostrar su contenido
Descifrado del archivo:


gpg2 -d secreto.txt.gpg


Se te pedir√° la contrase√±a que usaste para cifrar el archivo. Despu√©s de ingresarla correctamente, el contenido original del archivo se mostrar√° en la terminal.‚Äã


¬øQu√© sucede aqu√≠?

GPG utiliza la contrase√±a proporcionada para descifrar el contenido de secreto.txt.gpg, devolviendo el texto original.


podemos obtener el texto descifrado completamente sobreescribiendo con:

sudo gpg --output secreto.txt  --decrypt secreto.txt.gpg

--------------------------------------------------------------------------


practica 2



Instalar, Habilitar y arrancar los servicios:

sudo dnf install -y openssh-server
sudo dnf install http -y
sudo dnf install vsftpd -y

sudo systemctl enable --now vsftpd
sudo systemctl enable --now httpd
sudo systemctl enable --now sshd

sudo systemctl start vsftpd
sudo systemctl start httpd
sudo systemctl start sshd



despu√©s ponemos los servicios al firewall(por defecto habilitara los puertos):


sudo firewall-cmd --zone=public --add-service=ssh --permanent
sudo firewall-cmd --reload

sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --reload

sudo firewall-cmd --zone=public --add-service=ftp --permanent
sudo firewall-cmd --reload




Bloquear los puertos con iptables:

sudo iptables -A INPUT -p tcp --dport 21 -j DROP
sudo iptables -A INPUT -p tcp --dport 22 -j DROP
sudo iptables -A INPUT -p tcp --dport 80 -j DROP


Mostrar las reglas:

sudo iptables -L INPUT -n --line-numbers


Probar que est√°n caidos:

esto lo vamos hacer atravez de entrar a la pagina web de http, entrando a la cmd y intentando entrar por ssh y por ftp si todo sali√≥ bien deber√≠an de estar caidos.


Desbloquiar los puertos con iptables:

sudo iptables -D INPUT -p tcp --dport 21 -j DROP
sudo iptables -D INPUT -p tcp --dport 22 -j DROP
sudo iptables -D INPUT -p tcp --dport 80 -j DROP

Verificamso ue ya no est√°n:
sudo iptables -L INPUT -n


Comprobamos que est√°n levantados con:

entrar a los servicios y ver si todo esta corriendo perfectamente.




Ahora tenemos que hacer lo mismo con el FIREWALL(firewall-cmd):

bloquear puertos:

sudo firewall-cmd --zone=public --permanent --remove-port=21/tcp
sudo firewall-cmd --zone=public --permanent --remove-port=22/tcp
sudo firewall-cmd --zone=public --permanent --remove-port=80/tcp
sudo firewall-cmd --reload


ver que no est√°n en la lista de puertos con:

sudo firewall-cmd --zone=public --list-ports


Provamos los servicios:

entrando a los servicios y tienen que estar caidos.


Permitimos los puertos de nuevo:

sudo firewall-cmd --zone=public --permanent --add-port=21/tcp
sudo firewall-cmd --zone=public --permanent --add-port=22/tcp
sudo firewall-cmd --zone=public --permanent --add-port=80/tcp
sudo firewall-cmd --reload


Y revisamos que ahora si esten en la lista:

sudo firewall-cmd --zone=public --list-ports




--------------------------------------------------------------------------

practica 3:

Paso 1: Instalaci√≥n de Suricata en Oracle Linux 8/9
1.1. Instalar repositorios necesarios

.sudo dnf install epel-release dnf-plugins-core -y



1.2. Habilitar el repositorio de Suricata

.sudo dnf copr enable @oisf/suricata-7.0 -y



1.3. Instalar Suricata

.sudo dnf install suricata -y



1.4. Verificar la instalaci√≥n

.suricata --build-info

Este comando mostrar√° informaci√≥n sobre la versi√≥n y caracter√≠sticas de Suricata.



üìÅ Paso 2: Crear el archivo local.rules


Crear el directorio de reglas si no existe:

sudo mkdir -p /etc/suricata/rules



Crear el archivo local.rules:

sudo nano /etc/suricata/rules/local.rules



adentro de local rules agregar:

# Detectar tr√°fico ICMP (Ping)
alert icmp any any -> $HOME_NET any (msg:"ICMP Ping detectado"; sid:1000001; rev:1;)

# Detectar tr√°fico hacia el puerto 21/tcp (FTP)
alert tcp any any -> $HOME_NET 21 (msg:"Tr√°fico hacia puerto 21 detectado"; sid:1000002; rev:1;)

# Detectar tr√°fico hacia el puerto 22/tcp (SSH)
alert tcp any any -> $HOME_NET 22 (msg:"Tr√°fico hacia puerto 22 detectado"; sid:1000003; rev:1;)

# Detectar tr√°fico hacia el puerto 80/tcp (HTTP)
alert tcp any any -> $HOME_NET 80 (msg:"Tr√°fico hacia puerto 80 detectado"; sid:1000004; rev:1;)




 Paso 3: Configurar Suricata para cargar local.rules

Editar el archivo de configuraci√≥n suricata.yaml:

sudo vi /etc/suricata/suricata.yaml


con vi Buscar la secci√≥n rule-files: y asegurarte de que incluya local.rules:

default-rule-path: /var/lib/suricata/rules

rule-files:
  - suricata.rules
  - /etc/suricata/rules/local.rules


Esto indica a Suricata que cargue las reglas predeterminadas y tus reglas personalizadas, (Cerrar y guardar el archivo).



 Paso 4: Verificar la configuraci√≥n

Antes de iniciar Suricata, es recomendable verificar que la configuraci√≥n sea v√°lida:‚Äã

sudo suricata-update
sudo suricata -T -c /etc/suricata/suricata.yaml -v

Si todo est√° correcto, ver√°s un mensaje indicando que la prueba fue exitosa.





Paso 5: Ejecutar Suricata
Identifica la interfaz de red que utiliza tu sistema (por ejemplo, eth0, ens33, etc.):‚Äã

ip link show


Luego, ejecuta Suricata en modo IDS:‚Äã

sudo suricata -c /etc/suricata/suricata.yaml -i <INTERFAZ>

Reemplaza <INTERFAZ> con el nombre de tu interfaz de red.



Paso 6: Realizar pruebas de detecci√≥n:

ping
entrar por ssh
probar ftp
probar http



 Paso 7: Verificar alertas generadas:

Suricata registra las alertas en el archivo /var/log/suricata/fast.log. 

Para ver las alertas generadas:‚Äã

sudo tail -f /var/log/suricata/fast.log


tiene que salir las alertas


---------------------------------------------------------------------------

practica 4:



 üß© Instalar Google Authenticator
Primero, instala el m√≥dulo PAM de Google Authenticator y las bibliotecas necesarias:‚Äã


sudo dnf install epel-release -y
sudo dnf install google-authenticator qrencode-libs -y


Esto instalar√° el m√≥dulo de autenticaci√≥n y las bibliotecas para generar c√≥digos QR.‚Äã





2. üîê Configurar Google Authenticator para el Usuario
Ejecuta el siguiente comando con el usuario que utilizar√°s para acceder v√≠a SSH:‚Äã



google-authenticator
Durante la configuraci√≥n, se te har√°n varias preguntas. Responde de la siguiente manera:‚Äã

¬øDesea que las tokens de autenticaci√≥n se basen en el tiempo? (y/n): y

¬øDesea actualizar el archivo ~/.google_authenticator? (y/n): y

¬øDesea deshabilitar m√∫ltiples usos del mismo token? (y/n): y

¬øDesea aumentar la ventana de tiempo para permitir una mayor desviaci√≥n horaria? (y/n): y

¬øDesea habilitar c√≥digos de emergencia? (y/n): y‚Äã
turbogeek.co.uk

Se generar√° un c√≥digo QR y una clave secreta. Escanea el c√≥digo QR con la aplicaci√≥n Google Authenticator en tu dispositivo m√≥vil o ingresa la clave manualmente.‚Äã




3. ‚öôÔ∏è Configurar PAM para Usar Google Authenticator

Edita el archivo de configuraci√≥n de PAM para SSH:‚Äã

sudo nano /etc/pam.d/sshd


Agrega la siguiente l√≠nea al final del archivo:‚Äã

auth required pam_google_authenticator.so nullok


La opci√≥n nullok permite que los usuarios sin un archivo .google_authenticator puedan iniciar sesi√≥n sin ser solicitados para ingresar un c√≥digo de verificaci√≥n.‚Äã

Guarda y cierra el archivo.‚Äã

4. üîß Configurar SSH para Solicitar 2FA
Edita el archivo de configuraci√≥n del servidor SSH:‚Äã

sudo nano /etc/ssh/sshd_config


Busca y modifica las siguientes l√≠neas:‚Äã

ChallengeResponseAuthentication yes
UsePAM yes


Aseg√∫rate de que PasswordAuthentication est√© configurado seg√∫n tus necesidades.‚Äã

Guarda y cierra el archivo.‚Äã

Reinicia el servicio SSH para aplicar los cambios:‚Äã

sudo systemctl restart sshd



5. üß™ Probar la Autenticaci√≥n 2FA
Desde tu m√°quina host, intenta conectarte al servidor v√≠a SSH:‚Äã

ssh usuario@ip_del_servidor




Se te solicitar√°:‚Äã

La contrase√±a del usuario.




El c√≥digo de verificaci√≥n de 6 d√≠gitos generado por la aplicaci√≥n Google Authenticator.‚Äã

Si ambos son correctos, se establecer√° la conexi√≥n.‚Äã

üß† Consideraciones Finales
Aseg√∫rate de que el archivo .google_authenticator exista en el directorio home del usuario.

Verifica que los permisos del archivo sean correctos:‚Äã

chmod 600 ~/.google_authenticator




Si experimentas problemas, revisa los registros del sistema para obtener informaci√≥n adicional:‚Äã

sudo journalctl -xe










